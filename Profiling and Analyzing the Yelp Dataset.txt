Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table 	= 10000
ii. Business table 	= 10000
iii. Category table 	= 10000
iv. Checkin table 	= 10000
v. elite_years table 	= 10000
vi. friend table 	= 10000
vii. hours table 	= 10000	
viii. photo table 	= 10000
ix. review table 	= 10000 
x. tip table 		= 10000
xi. user table 		= 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business 	= 10000 (primary_key)
ii. Hours 	= 1562	(business_id)
iii. Category 	= 2643  (business_id)
iv. Attribute 	= 1115  (business_id)
v. Review 	= 8090	(business_id), 9581 (user_id)
vi. Checkin 	= 493	(business_id)
vii. Photo 	= 6493  (business_id)
viii. Tip 	= 3979  (business_id), 537  (user_id) 
ix. User 	= 10000 (primary key)
x. Friend 	= 11	(user_id)	(1 User had > 5000 records ¿?)
xi. Elite_years = 2780  (user_id)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no (but there are users with name = '')
	
	
	SQL code used to arrive at answer:

SELECT SUM(CASE WHEN name           IS NULL THEN 1 ELSE 0 END) AS name
      ,SUM(CASE WHEN review_count   IS NULL THEN 1 ELSE 0 END) AS review_count
      ,SUM(CASE WHEN yelping_since  IS NULL THEN 1 ELSE 0 END) AS yelping_since
      ,SUM(CASE WHEN useful         IS NULL THEN 1 ELSE 0 END) AS useful
      ,SUM(CASE WHEN funny          IS NULL THEN 1 ELSE 0 END) AS funny
      ,SUM(CASE WHEN cool           IS NULL THEN 1 ELSE 0 END) AS cool
      ,SUM(CASE WHEN fans           IS NULL THEN 1 ELSE 0 END) AS fans
      ,SUM(CASE WHEN average_stars  IS NULL THEN 1 ELSE 0 END) AS average_stars
FROM user
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3,70
		
	
	ii. Table: Business, Column: Stars
	
		min: 1		max: 5	 	avg: 3,65
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0,01
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1,94
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24,30
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

SELECT      COUNT(*) AS num_reviews
            ,B.City

FROM        review R
INNER JOIN  business B ON B.id = R.business_id
GROUP BY    B.City
ORDER BY    num_reviews DESC
	
	
	Copy and Paste the Result Below:

+-------------+-----------------+
| num_reviews | city            |
+-------------+-----------------+
|         193 | Las Vegas       |
|          65 | Phoenix         |
|          51 | Toronto         |
|          37 | Scottsdale      |
|          30 | Henderson       |
|          28 | Tempe           |

	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT      stars
            ,COUNT(*)
FROM        business 
WHERE       city = 'Avon'
GROUP BY    stars


Copy and Paste the Resulting Table Below (2 columns – star rating and count):

+-------+----------+
| stars | COUNT(*) |
+-------+----------+
|   1.5 |        1 |
|   2.5 |        2 |
|   3.5 |        3 |
|   4.0 |        2 |
|   4.5 |        1 |
|   5.0 |        1 |
+-------+----------+

ii. Beachwood

SQL code used to arrive at answer:

SELECT      stars
            ,COUNT(*)
FROM        business 
WHERE       city = 'Beachwood'
GROUP BY    stars


Copy and Paste the Resulting Table Below (2 columns – star rating and count):
		
+-------+----------+
| stars | COUNT(*) |
+-------+----------+
|   2.0 |        1 |
|   2.5 |        1 |
|   3.0 |        2 |
|   3.5 |        2 |
|   4.0 |        1 |
|   4.5 |        2 |
|   5.0 |        5 |
+-------+----------+


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

SELECT      COUNT(*) AS num_reviews
            ,R.user_id
            ,U.name
FROM        review R
LEFT JOIN   user U ON U.id = R.user_id
GROUP BY    R.user_id 
ORDER BY    num_reviews DESC
LIMIT       3	
	
	Copy and Paste the Result Below:
		
+-------------+------------------------+------+
| num_reviews | user_id                | name |
+-------------+------------------------+------+
|           7 | CxDOIDnH8gp9KXzpBHJYXw | None |
|           7 | U4INQZOPSUaj8hMjLlZ3KA | None |
|           5 | 8teQ4Zc9jpl_ffaPJUn6Ew | None |
+-------------+------------------------+------+

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
	Top users from the previous answer have 0 fans, and with SQL query you can see that users with more fans have little reviews made.

SELECT      U.fans
           ,COUNT(*) AS num_reviews
FROM        user U
LEFT JOIN   review R ON R.user_id = U.id
GROUP BY    U.id
ORDER BY    U.fans DESC

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:

+---------------+---------------+
| num_text_hate | num_text_love |
+---------------+---------------+
|           232 |          1780 |
+---------------+---------------+
	
	SQL code used to arrive at answer:

SELECT  SUM(CASE WHEN UPPER(R.Text) LIKE '%HATE%' THEN 1 ELSE 0 END) AS num_text_hate     
       ,SUM(CASE WHEN UPPER(R.Text) LIKE '%LOVE%' THEN 1 ELSE 0 END) AS num_text_love     
FROM   review R

	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

SELECT   id
         ,name
         ,fans
FROM     user
ORDER BY fans DESC
LIMIT 10	
	
	Copy and Paste the Result Below:

+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
   Yes, Restaurants with less stars open early in the morning

ii. Do the two groups you chose to analyze have a different number of reviews?
   Yes, restaurants with 4-5 stars are reviewed more
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
   Yes, the Downtonw of the city seems to have the restaurants with lower stars

SQL code used for analysis:

i. Distribution of hours per group of stars

SELECT     DISTINCT h.hours
           ,CASE  WHEN stars >= 4 AND stars <= 5 THEN '4-5' 
                  WHEN stars >= 2 AND stars <= 3 THEN '2-3'
                  ELSE 'other'
            END   AS group_stars

FROM        business B
INNER JOIN  hours    H ON B.id = H.business_id
INNER JOIN  category C ON B.id = C.business_id
WHERE       B.city = 'Toronto' AND C.category ='Restaurants'
            AND group_stars <> 'other'

GROUP BY    group_stars, H.hours
ORDER BY    H.hours


ii. Number of reviews / stars in restaurants of Toronto

SELECT      CASE  WHEN stars >= 4 AND stars <= 5 THEN '4-5' 
                  WHEN stars >= 2 AND stars <= 3 THEN '2-3'
                  ELSE 'other'
            END   		AS group_stars
           ,SUM(B.review_count) AS review_total

FROM        business B
INNER JOIN  category C  ON B.id = C.business_id
WHERE       C.category      =  'Restaurants' 
            AND B.City      =  'Toronto' 
            AND group_stars <> 'other'

GROUP BY    group_stars

iii. Neighborhood of the restaurant per group of stars

SELECT     B.neighborhood
           ,CASE  WHEN stars >= 4 AND stars <= 5 THEN '4-5' 
                  WHEN stars >= 2 AND stars <= 3 THEN '2-3'
                  ELSE 'other'
            END   AS group_stars

FROM        business B
INNER JOIN  category C ON B.id = C.business_id
WHERE       B.city = 'Toronto' AND C.category ='Restaurants'
            AND group_stars <> 'other'

ORDER BY group_stars DESC
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: Open business have more reviews and more percentage of better reviews above 4 stars
         
         
ii. Difference 2: The worst states to open a business are Ohio, El Dorado Hills and South Carolina. It may be indicative of depressed economic areas.
         
         
         
SQL code used for analysis:


-- i. Number of reviews, average of number of stars and distribution of stars
SELECT       B.is_open
            ,COUNT(*)            AS total
            ,SUM(review_count)   AS num_reviews
            ,ROUND(AVG(stars),2) AS avg_stars
            ,SUM(CASE WHEN stars >=0 AND stars < 2 THEN 1 ELSE 0 END) AS star_less_2  --SQLite don´t have VAR or STDEV
            ,SUM(CASE WHEN stars >=2 AND stars < 4 THEN 1 ELSE 0 END) AS star_2_4
            ,SUM(CASE WHEN stars >=4 AND stars <=5 THEN 1 ELSE 0 END) AS star_4_5

FROM        business B
GROUP BY    B.is_open


-- ii. Calculate percentage of open and close business per state

SELECT      state   
           ,ROUND(CAST(business_close AS float) / total * 100, 2) AS close_percentage
           ,ROUND(CAST(business_open  AS float) / total * 100, 2) AS open_percentage
           ,total
FROM (SELECT    city   --Calculate num close and open business per city
               ,state
               ,SUM(CASE WHEN is_open = 0 THEN 1 ELSE 0 END)  AS business_close
               ,SUM(CASE WHEN is_open = 1 THEN 1 ELSE 0 END)  AS business_open
               ,COUNT(*) as total
      FROM      business
      GROUP BY city)
WHERE total > 20
GROUP BY state
ORDER BY close_percentage DESC

	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
 
  predicting the overall star rating for a business
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
       I want to know if some attributes of the business have relation with a better star rating and what attributes if I am going open a business have little impact         
                  
iii. Output of your finished dataset:
         
+----------------------------+------------+-------------+
| name                       | mean_stars | is_meanfull |
+----------------------------+------------+-------------+
| BusinessAcceptsBitcoin     |        4.5 |           5 |
| AcceptsInsurance           |       4.25 |           8 |
| ByAppointmentOnly          |        4.2 |          22 |
| DogsAllowed                |       3.92 |           6 |
| BusinessAcceptsCreditCards |        3.7 |          74 |
| BikeParking                |       3.54 |          40 |
| BusinessParking            |       3.51 |          51 |
| WheelchairAccessible       |       3.44 |          27 |
| BestNights                 |       3.42 |           6 |
| CoatCheck                  |       3.42 |           6 |


+--------------------------+------------+-------------+
| name                     | mean_stars | is_meanfull |
+--------------------------+------------+-------------+
| AgesAllowed              |        2.0 |           1 |
| Music                    |       3.06 |           8 |
| RestaurantsGoodForGroups |       3.07 |          37 |
| RestaurantsDelivery      |       3.13 |          31 |
| OutdoorSeating           |       3.14 |          35 |
| RestaurantsTakeOut       |       3.17 |          35 |
| RestaurantsReservations  |       3.19 |          31 |
| RestaurantsAttire        |       3.19 |          29 |
         
iv. Provide the SQL code you used to create your final dataset:


SELECT      A.name
           ,ROUND(AVG(B.stars),2)   AS mean_stars
           ,COUNT(*)                AS is_meanfull  --Greater the number more confidence

FROM       attribute A
INNER JOIN business  B ON A.business_id = B.id

GROUP BY   A.name
ORDER BY   mean_stars ASC, is_meanfull DESC